<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cens</groupId>
	<artifactId>validador-TEI</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>validador-TEI-1.0-SNAPSHOT</name>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<hapifhir_version>7.4.5</hapifhir_version>
		<spring_boot_version>3.2.6</spring_boot_version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.5.6</version>
		</dependency>

		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server-openapi</artifactId>
			<version>7.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring_boot_version}</version>
		</dependency>

		<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapifhir_version}</version>
		</dependency>

		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
			<version>${hapifhir_version}</version>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-validation</artifactId>
			<version>${hapifhir_version}</version>
		</dependency>

		<!-- At least one "structures" JAR must also be included -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-r5</artifactId>
			<version>${hapifhir_version}</version>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-validation-resources-r5</artifactId>
			<version>${hapifhir_version}</version>
		</dependency>

		<!-- This dependency is used for the "FHIR Tester" web app overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapifhir_version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapifhir_version}</version>
			<classifier>classes</classifier>
		</dependency>

		<!--
    HAPI-FHIR uses Logback for logging support. The logback library is included
    automatically by Maven as a part of the hapi-fhir-base dependency, but you
    also need to include a logging library. Logback is used here, but log4j
    would also be fine.
    -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.5.6</version>
		</dependency>

		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.1.0</version>
		</dependency>


		<!--
    If you are using HAPI narrative generation, you will need to include Thymeleaf
    as well. Otherwise the following can be omitted.
     -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring_boot_version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.48.v20220622</version>
				<configuration>
					<httpConnector>
						<!--host>localhost</host-->
						<port>9999</port>
					</httpConnector>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.3.2</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>com.cens.validador.FHIRValidadorServerApplication</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<finalName>ROOT</finalName>
	</build>
	<profiles>
		<!-- Package the war for your preference. Use the boot profile if you prefer a single jar/war
        that can be started with and embedded application server. Default is jetty as it is assumed
        that the main users of this project already have an app server.
        Different profiles are needed as packing it for spring boot, makes the resulting war undeployable
        due to a class shading issue between tomcat and jetty.
        (the error is 'java.util.ServiceConfigurationError: org.apache.juli.logging.Log: org.eclipse.jetty.apache.jsp.JuliLog not a subtype')

         -->

		<!-- example of how to start the server using spring boot-->
		<!-- mvn clean package spring-boot:repackage -Pboot && java -jar target/hapi-fhir-jpaserver.war -->

		<!-- Use the boot profile for development and debugging options when using your IDE -->
		<profile>
			<id>boot</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
					<version>${spring_boot_version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- examples of how to start the server using the default profile-->
		<!-- mvn clean package jetty:run -Dspring.batch.job.enabled=false -->
		<!-- java -jar -Dspring.batch.job.enabled=false jetty-runner.jar target/hapi-fhir-jpaserver.war -->
		<profile>
			<id>jetty</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
					<version>${spring_boot_version}</version>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-starter-tomcat</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
